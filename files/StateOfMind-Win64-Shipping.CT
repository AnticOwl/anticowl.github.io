<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>37</ID>
      <Description>"----------------------------------------------"</Description>
      <Color>FFFF80</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"- State of Mind Camera for Steam"</Description>
      <Color>FFFF80</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"- Antic Owl and One3rd"</Description>
      <Color>FFFF80</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"- See Table Extra for info"</Description>
      <Color>FFFF80</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"----------------------------------------------"</Description>
      <Color>FFFF80</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"Auto Attach To Game"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
[ENABLE]

local processName = "StateOfMind-Win64-Shipping.exe"
local function onTimer_Tick(timer)
  if readInteger(processName) == nil then
    local processId = getProcessIDFromProcessName(processName)
    if processId and processId ~= getOpenedProcessID() then
      openProcess(processId)
    end
  end
end
local autoAttachTimer = createTimer(getMainForm(), true)
autoAttachTimer.Interval = 1000
autoAttachTimer.OnTimer = onTimer_Tick

[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Camera Structure - Leave ON"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

assert("StateOfMind-Win64-Shipping.exe"+132A932,F2 0F 10 81 1C 04 00 00 F2 41)
define(camStruct,"StateOfMind-Win64-Shipping.exe"+132A932)
registersymbol(camStruct)

alloc(camStructMem,$1000,"StateOfMind-Win64-Shipping.exe"+132A932)
registersymbol(camStructMem)

define(pcamStruct,camStructMem+100)
registersymbol(pcamStruct)

label(code)
label(return)

camStructMem:

code:
  mov [pcamStruct], rcx
  movsd xmm0,[rcx+0000041C]
  jmp return

camStruct:
  jmp camStructMem
  nop 3
return:

[DISABLE]

camStruct:
  db F2 0F 10 81 1C 04 00 00
unregistersymbol(camStructMem)
unregistersymbol(pcamStruct)
unregistersymbol(camStruct)
dealloc(camStrcutMem)

{
// ORIGINAL CODE - INJECTION POINT: StateOfMind-Win64-Shipping.exe+132A932

StateOfMind-Win64-Shipping.exe+132A905: 48 8B 8B 10 04 00 00     - mov rcx,[rbx+00000410]
StateOfMind-Win64-Shipping.exe+132A90C: 48 85 C9                 - test rcx,rcx
StateOfMind-Win64-Shipping.exe+132A90F: 74 3D                    - je StateOfMind-Win64-Shipping.exe+132A94E
StateOfMind-Win64-Shipping.exe+132A911: 0F 57 C0                 - xorps xmm0,xmm0
StateOfMind-Win64-Shipping.exe+132A914: 0F 2F 81 00 04 00 00     - comiss xmm0,[rcx+00000400]
StateOfMind-Win64-Shipping.exe+132A91B: 73 31                    - jae StateOfMind-Win64-Shipping.exe+132A94E
StateOfMind-Win64-Shipping.exe+132A91D: F2 0F 10 81 10 04 00 00  - movsd xmm0,[rcx+00000410]
StateOfMind-Win64-Shipping.exe+132A925: F2 0F 11 06              - movsd [rsi],xmm0
StateOfMind-Win64-Shipping.exe+132A929: 8B 81 18 04 00 00        - mov eax,[rcx+00000418]
StateOfMind-Win64-Shipping.exe+132A92F: 89 46 08                 - mov [rsi+08],eax
// ---------- INJECTING HERE ----------
StateOfMind-Win64-Shipping.exe+132A932: F2 0F 10 81 1C 04 00 00  - movsd xmm0,[rcx+0000041C]
// ---------- DONE INJECTING  ----------
StateOfMind-Win64-Shipping.exe+132A93A: F2 41 0F 11 06           - movsd [r14],xmm0
StateOfMind-Win64-Shipping.exe+132A93F: 8B 81 24 04 00 00        - mov eax,[rcx+00000424]
StateOfMind-Win64-Shipping.exe+132A945: 41 89 46 08              - mov [r14+08],eax
StateOfMind-Win64-Shipping.exe+132A949: E9 2B 02 00 00           - jmp StateOfMind-Win64-Shipping.exe+132AB79
StateOfMind-Win64-Shipping.exe+132A94E: 48 8B 03                 - mov rax,[rbx]
StateOfMind-Win64-Shipping.exe+132A951: 48 8B CB                 - mov rcx,rbx
StateOfMind-Win64-Shipping.exe+132A954: 48 89 BC 24 80 00 00 00  - mov [rsp+00000080],rdi
StateOfMind-Win64-Shipping.exe+132A95C: FF 90 48 06 00 00        - call qword ptr [rax+00000648]
StateOfMind-Win64-Shipping.exe+132A962: 48 8B F8                 - mov rdi,rax
StateOfMind-Win64-Shipping.exe+132A965: 48 85 C0                 - test rax,rax
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>34</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"X +410"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[pcamStruct]+0410</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Y +414"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[pcamStruct]+0414</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Z +418"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[pcamStruct]+0418</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Pitch +41C"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>[pcamStruct]+041c</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Yaw +420"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>[pcamStruct]+0420</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Roll +424"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[pcamStruct]+0424</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"FOV +428"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[pcamStruct]+0428</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>119</ID>
      <Description>"Detach Camera"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("StateOfMind-Win64-Shipping.exe"+1322C12,F2 0F 11 87 10 04 00 00)

//Detach Camera X,Y
"StateOfMind-Win64-Shipping.exe"+1322C12:
  db 90 90 90 90 90 90 90 90

//Detach Z
"StateOfMind-Win64-Shipping.exe"+1322C2D:
  db 90 90 90 90 90 90

//Deatch Tilt and Yaw
"StateOfMind-Win64-Shipping.exe"+1322C20:
  db 90 90 90 90 90 90 90 90
//Detach Roll
"StateOfMind-Win64-Shipping.exe"+1322C37:
  db 90 90 90 90 90 90

//Detach FOV
"StateOfMind-Win64-Shipping.exe"+1322C41:
  db 90 90 90 90 90 90 90

[DISABLE]
"StateOfMind-Win64-Shipping.exe"+1322C12:
  db F2 0F 11 87 10 04 00 00

"StateOfMind-Win64-Shipping.exe"+1322C2D:
  db 89 87 18 04 00 00

"StateOfMind-Win64-Shipping.exe"+1322C20:
  db F2 0F 11 87 1C 04 00 00

"StateOfMind-Win64-Shipping.exe"+1322C37:
  db 89 87 24 04 00 00

"StateOfMind-Win64-Shipping.exe"+1322C41:
  db 0F 11 87 28 04 00 00


{
// ORIGINAL CODE - INJECTION POINT: Styx2-Win64-Shipping.exe+13807A6

Styx2-Win64-Shipping.exe+1380771: 48 8B 07                 - mov rax,[rdi]
Styx2-Win64-Shipping.exe+1380774: 48 8B CF                 - mov rcx,rdi
Styx2-Win64-Shipping.exe+1380777: FF 90 08 01 00 00        - call qword ptr [rax+00000108]
Styx2-Win64-Shipping.exe+138077D: F2 0F 10 44 24 30        - movsd xmm0,[rsp+30]
Styx2-Win64-Shipping.exe+1380783: 48 8D 54 24 68           - lea rdx,[rsp+68]
Styx2-Win64-Shipping.exe+1380788: 8B 88 C0 08 00 00        - mov ecx,[rax+000008C0]
Styx2-Win64-Shipping.exe+138078E: 8B 44 24 38              - mov eax,[rsp+38]
Styx2-Win64-Shipping.exe+1380792: 89 8F F0 03 00 00        - mov [rdi+000003F0],ecx
Styx2-Win64-Shipping.exe+1380798: 48 8D 8F 30 04 00 00     - lea rcx,[rdi+00000430]
Styx2-Win64-Shipping.exe+138079F: 83 A7 24 04 00 00 FC     - and dword ptr [rdi+00000424],-04
// ---------- INJECTING HERE ----------
Styx2-Win64-Shipping.exe+13807A6: F2 0F 11 87 F8 03 00 00  - movsd [rdi+000003F8],xmm0
// ---------- DONE INJECTING  ----------
Styx2-Win64-Shipping.exe+13807AE: F2 0F 10 44 24 3C        - movsd xmm0,[rsp+3C]
Styx2-Win64-Shipping.exe+13807B4: F2 0F 11 87 04 04 00 00  - movsd [rdi+00000404],xmm0
Styx2-Win64-Shipping.exe+13807BC: 0F 10 44 24 48           - movups xmm0,[rsp+48]
Styx2-Win64-Shipping.exe+13807C1: 89 87 00 04 00 00        - mov [rdi+00000400],eax
Styx2-Win64-Shipping.exe+13807C7: 8B 44 24 44              - mov eax,[rsp+44]
Styx2-Win64-Shipping.exe+13807CB: 89 87 0C 04 00 00        - mov [rdi+0000040C],eax
Styx2-Win64-Shipping.exe+13807D1: 8B 44 24 5C              - mov eax,[rsp+5C]
Styx2-Win64-Shipping.exe+13807D5: 0F 11 87 10 04 00 00     - movups [rdi+00000410],xmm0
Styx2-Win64-Shipping.exe+13807DC: 83 E0 03                 - and eax,03
Styx2-Win64-Shipping.exe+13807DF: F3 0F 10 44 24 58        - movss xmm0,[rsp+58]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>35</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>120</ID>
      <Description>"Enable Camera Movements"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//-- Speed modifier for camera movement
globalalloc(speedModifier,8)
speedModifier:
dd (float)7

{$lua}
[ENABLE]
originalFov = 0
function checkKeys()

  local speed = readFloat("speedModifier")
  local pitch = math.rad(readFloat("[pCamStruct]+41C")) -- Vertical (Pitch)
  local yaw = math.rad(readFloat("[pCamStruct]+420")) -- Horizontal (Yaw)
  local campitch = readFloat("[pCamStruct]+41C") -- Vertical (Pitch)
  local camyaw = readFloat("[pCamStruct]+420") -- Horizontal (Yaw)
  local FOV = math.deg(readFloat("[pCamStruct]+428"))
  local camFOV = readFloat("[pCamStruct]+428")

  local roll = math.rad(readFloat("[pCamStruct]+424"))
  local camroll = readFloat("[pCamStruct]+424")

  local camx = readFloat("[pCamStruct]+410") -- Camera X
  local camy = readFloat("[pCamStruct]+414") -- Camera Y
  local camz = readFloat("[pCamStruct]+418") -- Camera Z

  --Sine and Cosine of Rotation Values
  local siny = math.sin(yaw) -- Sine of Horizontal (Yaw)
  local cosy = math.cos(yaw) -- Cosine of Horizontal (Yaw)
  local sinp = math.sin(pitch) -- Sine of Vertical (Pitch)
  local cosp = math.cos(pitch) -- Cosine of Vertical (Pitch)

  --Hotkey Setup
  --[[
        Button Mappings:

        Y - Forward
        G - Left
        H - Backward
        J - Right
        T - Down
        U - Up
        V - Speed Up
        Alt - Slow Down

      --Key combinations for strafing are also defined
      --Keys are oriented to where mouse is pointing
  ]]

  --Forward
  if isKeyPressed(VK_NUMPAD8) then
    writeFloat("[pCamStruct]+410", camx + (cosy * speed))
    writeFloat("[pCamStruct]+414", camy + (siny * speed))
    writeFloat("[pCamStruct]+418", camz + (sinp * speed))
  end
  --Left
  if isKeyPressed(VK_NUMPAD4) then
    writeFloat("[pCamStruct]+410", camx + (math.cos(yaw - math.rad(90)) * speed))
    writeFloat("[pCamStruct]+414", camy + (math.sin(yaw - math.rad(90)) * speed))
  end
  --Back
  if isKeyPressed(VK_NUMPAD5) then
    writeFloat("[pCamStruct]+410", camx - (cosy * speed))
    writeFloat("[pCamStruct]+414", camy - (siny * speed))
    writeFloat("[pCamStruct]+418", camz - (sinp * speed))
  end
  --Right
  if isKeyPressed(VK_NUMPAD6) then
    writeFloat("[pCamStruct]+410", camx - (math.cos(yaw - math.rad(90)) * speed))
    writeFloat("[pCamStruct]+414", camy - (math.sin(yaw - math.rad(90)) * speed))
  end
  --Forward/Right
  if isKeyPressed(VK_NUMPAD8) and isKeyPressed(VK_NUMPAD6) then
    writeFloat("[pCamStruct]+410", camx + (math.cos(yaw + math.rad(45)) * speed))
    writeFloat("[pCamStruct]+414", camy + (math.sin(yaw + math.rad(45)) * speed))
    writeFloat("[pCamStruct]+418", camz + (sinp * speed))
  end
  --Forward/Left
  if isKeyPressed(VK_NUMPAD8) and isKeyPressed(VK_NUMPAD4) then
    writeFloat("[pCamStruct]+410", camx + (math.cos(yaw - math.rad(45)) * speed))
    writeFloat("[pCamStruct]+414", camy + (math.sin(yaw - math.rad(45)) * speed))
    writeFloat("[pCamStruct]+418", camz + (sinp * speed))
  end
  --Back/Left
  if isKeyPressed(VK_NUMPAD5) and isKeyPressed(VK_NUMPAD4) then
    writeFloat("[pCamStruct]+410", camx - (math.cos(yaw + math.rad(45)) * speed))
    writeFloat("[pCamStruct]+414", camy - (math.sin(yaw + math.rad(45)) * speed))
    writeFloat("[pCamStruct]+418", camz - (sinp * speed))
  end
  --Back/Right
  if isKeyPressed(VK_NUMPAD5) and isKeyPressed(VK_NUMPAD6) then
    writeFloat("[pCamStruct]+410", camx - (math.cos(yaw - math.rad(45)) * speed))
    writeFloat("[pCamStruct]+414", camy - (math.sin(yaw - math.rad(45)) * speed))
    writeFloat("[pCamStruct]+418", camz - (sinp * speed))
  end
  --Up
  if isKeyPressed(VK_NUMPAD9) then
   writeFloat("[pCamStruct]+418", camz + (speed * 0.5))
  end
    --Down
  if isKeyPressed(VK_NUMPAD7) then
   writeFloat("[pCamStruct]+418", camz - (speed * 0.5))
  end
    --Pitch Up
  if isKeyPressed(VK_UP) then
   writeFloat("[pCamStruct]+41C", campitch + (speed * 0.5))
  end
    --Pitch Down
  if isKeyPressed(VK_DOWN) then
   writeFloat("[pCamStruct]+41C", campitch - (speed * 0.5))
  end
      --Yaw Right
  if isKeyPressed(VK_RIGHT) then
   writeFloat("[pCamStruct]+420", camyaw + (speed * 0.5))
  end
    --Pitch Left
  if isKeyPressed(VK_LEFT) then
   writeFloat("[pCamStruct]+420", camyaw - (speed * 0.5))
  end
      --FoVIn
  if isKeyPressed(VK_ADD) then
   writeFloat("[pCamStruct]+428", camFOV + (speed * 0.5))
  end
      --FoVOut
  if isKeyPressed(VK_SUBTRACT) then
   writeFloat("[pCamStruct]+428", camFOV - (speed * 0.5))
  end
        --Roll Right
  if isKeyPressed(VK_NUMPAD3) then
   writeFloat("[pCamStruct]+424", camroll + (speed * 0.5))
  end
        --Roll Left
  if isKeyPressed(VK_NUMPAD1) then
   writeFloat("[pCamStruct]+424", camroll - (speed * 0.5))
  end


  --Speed Modifiers
  if isKeyPressed(VK_F) and isKeyPressed(VK_MENU) then --Normal-Fast
    writeFloat("speedModifier", 500)
  elseif isKeyPressed(VK_LCONTROL) then --If V is pressed, increase speed
    if (speed &lt; 5000) then
      writeFloat("speedModifier", speed + 2)
    end
  elseif isKeyPressed(VK_MENU) then --If Alt is pressed, slow way down
    writeFloat("speedModifier", .5)
  else --If nothing is pressed, speed is normal
    writeFloat("speedModifier", 7)
  end
end

t=createTimer(nil)
timer_setInterval(t, 10)
timer_onTimer(t, checkKeys)
timer_setEnabled(t, true)

[DISABLE]
timer_setEnabled(t, false)
writeFloat("[pCamStruct]-5C", originalFov)
originalFov = nil


</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>45</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"Time Stop"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

"StateOfMind-Win64-Shipping.exe"+11C8774:
  db B0 01

[DISABLE]
"StateOfMind-Win64-Shipping.exe"+11C8774:
  db 32 C0

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>96</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>399</ID>
      <Description>"Disable HUD"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
StateOfMind-Win64-Shipping.exe+269F26E:
  db 90 90 90

[DISABLE]
StateOfMind-Win64-Shipping.exe+269F26E:
  db 80 3F 00

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>46</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movsd [rdi+00000410],xmm0 - Correct X Axis</Description>
      <AddressString>StateOfMind-Win64-Shipping.exe+1322C12</AddressString>
      <Before>
        <Byte>3C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>10</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movsd [rdi+0000041C],xmm0 - Correct Pitch</Description>
      <AddressString>StateOfMind-Win64-Shipping.exe+1322C20</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>3C</Byte>
      </Before>
      <Actual>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>1C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne StateOfMind-Win64-Shipping.exe+11C877C</Description>
      <AddressString>StateOfMind-Win64-Shipping.exe+11C8772</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>10</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>32</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [StateOfMind-Win64-Shipping.exe+269FD68],xmm0</Description>
      <AddressString>StateOfMind-Win64-Shipping.exe+3B2F14</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>84</Byte>
        <Byte>95</Byte>
        <Byte>8F</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>4C</Byte>
        <Byte>CE</Byte>
        <Byte>2E</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>68</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [StateOfMind-Win64-Shipping.exe+269FD68],xmm0</Description>
      <AddressString>StateOfMind-Win64-Shipping.exe+3B2F26</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>6A</Byte>
        <Byte>F2</Byte>
        <Byte>F6</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>3A</Byte>
        <Byte>CE</Byte>
        <Byte>2E</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>68</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>speedModifier</Name>
      <Address>25AB48F0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>PgDn - Camera structure

End - Detach camera
Ins - Enable camera movements

NUMPAD 8/5/4/6 - Forw/Backward/Left/Right
NUMPAD 7/9 - Up/Down
NUMPAD 1/3 - Roll
NUMPAD +/- - FOV (use ALT for slower movements)
Arrows - Pitch and Yaw

Del - Enable/Disable HUD

NUMPAD 0 - Time Stop
</Comments>
</CheatTable>
